name: C++ Switch (Dev)

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      gcc_version:
        description: 'GCC version'
        required: true
        default: '14'
        type: choice
        options:
          - '14'
          - '13'
          - '12'

run-name: GCC Switch to ${{ inputs.gcc_version || '14' }}

env:
  gcc_version: ${{ inputs.gcc_version || '14' }}

jobs:
  build:
    name: C++ Switch (Dev)
    runs-on: ubuntu-24.04
    env:
      app_branch: "uboot"
    steps:
      - name: Switch for GNU C++ & AArch64 Cross-Compiler
        id: switch-gcc
        # if: ${{ 'true' == 'false' }} # disable
        env:
          DEBIAN_FRONTEND: noninteractive
          gcc_version: ${{ env.gcc_version }}
        run: |
          echo -e "Current working directory: $(pwd)"

          sudo -E apt-get -yqq update

          packages_install=(
            "gcc-${gcc_version}"
            "g++-${gcc_version}"
            "gcc-${gcc_version}-multilib"
            "g++-${gcc_version}-multilib"
            "gcc-${gcc_version}-aarch64-linux-gnu"
            "cpp-${gcc_version}-aarch64-linux-gnu"
          )
          sudo -E apt-get -yqq install "${packages_install[@]}"
          
          # 设置 update-alternatives 以管理不同版本的GCC、G++和AArch64工具
          ls /usr/bin/gcc-* /usr/bin/g++-*
          tools_gcc=(
            "gcc"
            "gcc-ar"
            "gcc-nm"
            "gcc-ranlib"
            "g++"
          )
          for tool in "${tools_gcc[@]}"; do
            versions=$(ls /usr/bin/${tool}-* | grep -Eo '[0-9]+$' | sort -u)
            for version in ${versions}; do
              sudo update-alternatives --install /usr/bin/${tool} ${tool} /usr/bin/${tool}-${version} ${version}
            done
          done
          sudo update-alternatives --query gcc
          sudo update-alternatives --query g++
          # 切换到所需版本
          for tool in "${tools_gcc[@]}"; do
            sudo update-alternatives --set ${tool} /usr/bin/${tool}-${gcc_version}
          done
          # 验证版本
          gcc --version
          g++ --version

          # AArch64专用设置，涵盖所有带版本号的aarch64-linux-gnu工具
          ls /usr/bin/aarch64-linux-gnu-*
          tools_aarch64=(
            "aarch64-linux-gnu-gcc"
            "aarch64-linux-gnu-cpp"
            "aarch64-linux-gnu-gcc-ar"
            "aarch64-linux-gnu-gcc-nm"
            "aarch64-linux-gnu-gcc-ranlib"
            "aarch64-linux-gnu-gcov"
            "aarch64-linux-gnu-gcov-dump"
            "aarch64-linux-gnu-gcov-tool"
            "aarch64-linux-gnu-lto-dump"
          )
          for tool in "${tools_aarch64[@]}"; do
            versions=$(ls /usr/bin/${tool}-* 2>/dev/null | grep -Eo '[0-9]+$' | sort -u)
            for version in ${versions}; do
              sudo update-alternatives --install /usr/bin/${tool} ${tool} /usr/bin/${tool}-${version} ${version}
            done
          done
          sudo update-alternatives --query aarch64-linux-gnu-gcc
          # 切换到所需版本
          for tool in "${tools_aarch64[@]}"; do
            sudo update-alternatives --set ${tool} /usr/bin/${tool}-${gcc_version}
          done

          # 验证版本
          aarch64-linux-gnu-gcc --version

          echo "Switched to GCC/G++ and AArch64 GCC version ${gcc_version}."
          echo "status=success" >> ${GITHUB_OUTPUT}
